services:
  backend:
    container_name: backend
    build:
      context: ./backend
    volumes:
      - ./backend:/app
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - db
      - rabbitmq
    networks:
      - app-network

  celery:
    container_name: celery-worker
    build:
      context: ./backend
    command: celery -A projetloi worker --loglevel=info
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - backend
      - rabbitmq
    networks:
      - app-network

  frontend:
    container_name: frontend
    build:
      context: ./frontend
    volumes:
      - ./frontend:/app
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - app-network

  db:
    container_name: mysql
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - app-network

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"   # AMQP
      - "15672:15672" # UI web RabbitMQ
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge
